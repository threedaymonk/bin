#!/usr/bin/env ruby
require "stringio"
$stderr = StringIO.new
require 'mechanize'
$stderr = STDERR
require 'csv'
UNIT_MULTIPLIERS = {
  "TB" => 2**40,
  "GB" => 2**30,
  "MB" => 2**20,
  "KB" => 2**10
}

email, password = nil
config_file = File.join(ENV['HOME'], '.newnet')
eval(File.read(config_file), binding, config_file, 1)

agent = WWW::Mechanize.new

# Sign in
page = agent.get('https://orderform.co.uk/login/index.php?form=orac')
form = page.form('login')
form.emailaddress = email
form.password     = password
page = agent.submit(form, form.buttons.first)

# Go to bandwidth page
page = agent.get(page.search("//a").map{ |a| a['href'] }.find{ |h| h =~ /ADSLAccountDetails/ })

# Find 15px tds
tds = page.search("//td[@style='font-size: 15px']").map{ |a| a.inner_html }.select{ |h| h=~ /^<strong/ }

data = tds.inject({}){ |acc, td|
  m = td.match(%r{ <strong>([^<]+)</strong> \s* ([\d\.]+) \s* (\D+) }x)
  key    = m[1]
  value  = m[2].to_f
  units  = m[3].upcase.gsub(/[^A-Z]+/, "")

  value *= (UNIT_MULTIPLIERS[units] || 1)

  key =
    case key
    when /^included bandwidth allowance/i
      :included
    when /^pre-paid/i
      :prepaid
    when /^peak usage/i
      :peak
    when /^off-peak usage/i
      :offpeak
    else
      key
    end

  acc[key] = value
  acc
}
data[:allowance] = data[:included] + data[:prepaid]

if ARGV.include?("--usage")
  puts("%d" % ((data[:peak] * 100) / data[:allowance]).ceil)
else
  data.each do |key, value|
    # Uglier than necessary b/c left-padding is broken with %f
    gb_value = value / UNIT_MULTIPLIERS["GB"]
    puts "%s %s GB" % [(key.to_s + ":").ljust(16), ("%2.2f" % gb_value).rjust(5)]
  end
end
