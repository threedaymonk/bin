#!/usr/bin/env ruby
require "stringio"
require 'mechanize'
require 'csv'
require 'json'

UNIT_MULTIPLIERS = {
  "TB" => 2**40,
  "GB" => 2**30,
  "MB" => 2**20,
  "KB" => 2**10
}

config = JSON.parse(File.read(File.join(ENV['HOME'], ".config", "newnet")))

agent = Mechanize.new

# Sign in
page = agent.get('https://orderform.co.uk/login/index.php?form=orac')
form = page.form('login')
form.emailaddress = config["email"]
form.password     = config["password"]
page = agent.submit(form, form.buttons.first)

# Go to bandwidth page
account_link = page.search("//a").map{ |a| a['href'] }.find{ |h| h =~ /ADSLAccountDetails/ }
page = agent.get(account_link)

body = page.body.
            gsub(%r{<script.*?</script>|<style.*?</style>}im, " ").
            gsub(/(?:<[^>]+>|\s)+/, " ")

data = {
  :included => %r{Included bandwidth allowance: (\S+)},
  :prepaid  => %r{Additional pre paid bandwidth allowance: (\S+)},
  :peak     => %r{Peak usage in \w+: (\S+)},
  :offpeak  => %r{Off Peak \(free\) usage in \w+: (\S+)}
}.inject({}){ |h, (name, pattern)|
  field  = body.match(pattern)[1]
  units  = field.upcase.gsub(/[^A-Z]+/, "")
  value  = field.to_f * (UNIT_MULTIPLIERS[units] || 1)

  h.merge(name => value)
}

data[:allowance] = data[:included] + data[:prepaid]

if ARGV.include?("--usage")
  puts("%d" % ((data[:peak] * 100) / data[:allowance]).ceil)
else
  data.each do |key, value|
    # Uglier than necessary b/c left-padding is broken with %f
    gb_value = value / UNIT_MULTIPLIERS["GB"]
    puts "%s %s GB" % [(key.to_s + ":").ljust(16), ("%2.2f" % gb_value).rjust(5)]
  end
end
